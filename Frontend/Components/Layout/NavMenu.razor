@inject NavigationManager NavigationManager

<nav class="bg-white dark:bg-gray-900 flex justify-between items-center mx-auto p-4 font-semibold">
    <!-- Logo -->
    <a href="/">
        <div class="flex flex-row gap-3">
            <span class="self-center text-2xl lg:text-3xl font-semibold whitespace-nowrap">ClinicApp</span>
        </div>
    </a>

    <!-- Desktop Navigation -->
    <ul class="hidden md:flex items-center gap-2">
        @foreach (var link in NavBarLinks)
        {
            var isActive = IsActive(link.Route);
            <li>
                <a href="@link.Route" class="p-2 hover:bg-primary-500 rounded-xl cursor-pointer duration-300 hover:text-black @(isActive ? "bg-primary-500 text-black" : "")">
                    @link.Label
                </a>
            </li>
        }
        <ul class="flex lg:mx-10 justify-content gap-5 items-center">
            <ThemeSwitch/>
            <button @onclick="Logout">Logout</button>
        </ul>
    </ul>

    <!-- Menu Hamburger Icon -->
    <div @onclick="ToggleMenu" class="z-20 block md:hidden">
        @if (ShowMenu)
        {
            <i class="close-icon">X</i>
            <!-- Replace with the appropriate icon -->
        }
        else
        {
            <i class="menu-icon">☰</i>
            <!-- Replace with the appropriate icon -->
        }
    </div>

    <!-- Mobile Navigation Menu -->
    <ul class="@MenuClasses">
        <!-- Mobile Logo -->
        <a href="/">
            <div class="flex flex-row gap-3 mb-5">
                <span class="self-center text-3xl font-semibold whitespace-nowrap">CheckMate</span>
            </div>
        </a>

        <!-- Mobile Navigation Items -->
        @foreach (var link in NavBarLinks)
        {
            var isActive = IsActive(link.Route);
            <li class="my-4">
                <a href="@link.Route" class="p-2 hover:bg-primary-500 rounded-xl cursor-pointer duration-300 hover:text-black @(isActive ? "bg-primary-500 text-black" : "")">
                    @link.Label
                </a>
            </li>
        }
        <div class="p-2">
            <ThemeSwitch/>
            <button @onclick="Logout" class="block my-3">Logout</button>
        </div>
    </ul>
</nav>

@code {
    private bool ShowMenu { get; set; } = false;
    private string MenuClasses => ShowMenu ? "z-10 fixed md:hidden left-0 top-0 w-full sm:w-[60%] h-full border-r border-r-gray-900 bg-white dark:bg-gray-900 ease-in-out duration-500 p-5" : "ease-in-out w-[60%] duration-500 fixed top-0 bottom-0 left-[-100%]";

    private List<NavLinkItem> NavBarLinks = new()
    {
        new NavLinkItem("/", "Home"),
        new NavLinkItem("/doctors", "Doctors"),
        new NavLinkItem("/clinics", "Clinics"),
        new NavLinkItem("/my-visits", "My visits"),
        new NavLinkItem("/profile", "Profile"),
        new NavLinkItem("/settings", "Settings"),
    };

    private bool IsActive(string route)
    {
        return NavigationManager.Uri.Contains(route, StringComparison.OrdinalIgnoreCase);
    }

    private void ToggleMenu()
    {
        ShowMenu = !ShowMenu;
    }

    private async Task Logout()
    {
// Replace with your logout logic
        Console.WriteLine("Logged out");
    }

    private record NavLinkItem(string Route, string Label);

}